// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package acme

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/haproxytech/client-native/v6/models"
)

// DeleteAcmeProviderAcceptedCode is the HTTP code returned for type DeleteAcmeProviderAccepted
const DeleteAcmeProviderAcceptedCode int = 202

/*
DeleteAcmeProviderAccepted Configuration change accepted and reload requested

swagger:response deleteAcmeProviderAccepted
*/
type DeleteAcmeProviderAccepted struct {
	/*ID of the requested reload

	 */
	ReloadID string `json:"Reload-ID"`
}

// NewDeleteAcmeProviderAccepted creates DeleteAcmeProviderAccepted with default headers values
func NewDeleteAcmeProviderAccepted() *DeleteAcmeProviderAccepted {

	return &DeleteAcmeProviderAccepted{}
}

// WithReloadID adds the reloadId to the delete acme provider accepted response
func (o *DeleteAcmeProviderAccepted) WithReloadID(reloadID string) *DeleteAcmeProviderAccepted {
	o.ReloadID = reloadID
	return o
}

// SetReloadID sets the reloadId to the delete acme provider accepted response
func (o *DeleteAcmeProviderAccepted) SetReloadID(reloadID string) {
	o.ReloadID = reloadID
}

// WriteResponse to the client
func (o *DeleteAcmeProviderAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Reload-ID

	reloadID := o.ReloadID
	if reloadID != "" {
		rw.Header().Set("Reload-ID", reloadID)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(202)
}

// DeleteAcmeProviderNoContentCode is the HTTP code returned for type DeleteAcmeProviderNoContent
const DeleteAcmeProviderNoContentCode int = 204

/*
DeleteAcmeProviderNoContent acme provider deleted

swagger:response deleteAcmeProviderNoContent
*/
type DeleteAcmeProviderNoContent struct {
}

// NewDeleteAcmeProviderNoContent creates DeleteAcmeProviderNoContent with default headers values
func NewDeleteAcmeProviderNoContent() *DeleteAcmeProviderNoContent {

	return &DeleteAcmeProviderNoContent{}
}

// WriteResponse to the client
func (o *DeleteAcmeProviderNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteAcmeProviderNotFoundCode is the HTTP code returned for type DeleteAcmeProviderNotFound
const DeleteAcmeProviderNotFoundCode int = 404

/*
DeleteAcmeProviderNotFound The specified resource was not found

swagger:response deleteAcmeProviderNotFound
*/
type DeleteAcmeProviderNotFound struct {
	/*Configuration file version

	 */
	ConfigurationVersion string `json:"Configuration-Version"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteAcmeProviderNotFound creates DeleteAcmeProviderNotFound with default headers values
func NewDeleteAcmeProviderNotFound() *DeleteAcmeProviderNotFound {

	return &DeleteAcmeProviderNotFound{}
}

// WithConfigurationVersion adds the configurationVersion to the delete acme provider not found response
func (o *DeleteAcmeProviderNotFound) WithConfigurationVersion(configurationVersion string) *DeleteAcmeProviderNotFound {
	o.ConfigurationVersion = configurationVersion
	return o
}

// SetConfigurationVersion sets the configurationVersion to the delete acme provider not found response
func (o *DeleteAcmeProviderNotFound) SetConfigurationVersion(configurationVersion string) {
	o.ConfigurationVersion = configurationVersion
}

// WithPayload adds the payload to the delete acme provider not found response
func (o *DeleteAcmeProviderNotFound) WithPayload(payload *models.Error) *DeleteAcmeProviderNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete acme provider not found response
func (o *DeleteAcmeProviderNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteAcmeProviderNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Configuration-Version

	configurationVersion := o.ConfigurationVersion
	if configurationVersion != "" {
		rw.Header().Set("Configuration-Version", configurationVersion)
	}

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
DeleteAcmeProviderDefault General Error

swagger:response deleteAcmeProviderDefault
*/
type DeleteAcmeProviderDefault struct {
	_statusCode int
	/*Configuration file version

	 */
	ConfigurationVersion string `json:"Configuration-Version"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteAcmeProviderDefault creates DeleteAcmeProviderDefault with default headers values
func NewDeleteAcmeProviderDefault(code int) *DeleteAcmeProviderDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteAcmeProviderDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete acme provider default response
func (o *DeleteAcmeProviderDefault) WithStatusCode(code int) *DeleteAcmeProviderDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete acme provider default response
func (o *DeleteAcmeProviderDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithConfigurationVersion adds the configurationVersion to the delete acme provider default response
func (o *DeleteAcmeProviderDefault) WithConfigurationVersion(configurationVersion string) *DeleteAcmeProviderDefault {
	o.ConfigurationVersion = configurationVersion
	return o
}

// SetConfigurationVersion sets the configurationVersion to the delete acme provider default response
func (o *DeleteAcmeProviderDefault) SetConfigurationVersion(configurationVersion string) {
	o.ConfigurationVersion = configurationVersion
}

// WithPayload adds the payload to the delete acme provider default response
func (o *DeleteAcmeProviderDefault) WithPayload(payload *models.Error) *DeleteAcmeProviderDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete acme provider default response
func (o *DeleteAcmeProviderDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteAcmeProviderDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Configuration-Version

	configurationVersion := o.ConfigurationVersion
	if configurationVersion != "" {
		rw.Header().Set("Configuration-Version", configurationVersion)
	}

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
