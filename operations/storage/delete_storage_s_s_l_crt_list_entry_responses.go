// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/haproxytech/client-native/v6/models"
)

// DeleteStorageSSLCrtListEntryAcceptedCode is the HTTP code returned for type DeleteStorageSSLCrtListEntryAccepted
const DeleteStorageSSLCrtListEntryAcceptedCode int = 202

/*
DeleteStorageSSLCrtListEntryAccepted Configuration change accepted and reload requested

swagger:response deleteStorageSSLCrtListEntryAccepted
*/
type DeleteStorageSSLCrtListEntryAccepted struct {
	/*ID of the requested reload

	 */
	ReloadID string `json:"Reload-ID"`
}

// NewDeleteStorageSSLCrtListEntryAccepted creates DeleteStorageSSLCrtListEntryAccepted with default headers values
func NewDeleteStorageSSLCrtListEntryAccepted() *DeleteStorageSSLCrtListEntryAccepted {

	return &DeleteStorageSSLCrtListEntryAccepted{}
}

// WithReloadID adds the reloadId to the delete storage s s l crt list entry accepted response
func (o *DeleteStorageSSLCrtListEntryAccepted) WithReloadID(reloadID string) *DeleteStorageSSLCrtListEntryAccepted {
	o.ReloadID = reloadID
	return o
}

// SetReloadID sets the reloadId to the delete storage s s l crt list entry accepted response
func (o *DeleteStorageSSLCrtListEntryAccepted) SetReloadID(reloadID string) {
	o.ReloadID = reloadID
}

// WriteResponse to the client
func (o *DeleteStorageSSLCrtListEntryAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Reload-ID

	reloadID := o.ReloadID
	if reloadID != "" {
		rw.Header().Set("Reload-ID", reloadID)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(202)
}

// DeleteStorageSSLCrtListEntryNoContentCode is the HTTP code returned for type DeleteStorageSSLCrtListEntryNoContent
const DeleteStorageSSLCrtListEntryNoContentCode int = 204

/*
DeleteStorageSSLCrtListEntryNoContent Successful operation

swagger:response deleteStorageSSLCrtListEntryNoContent
*/
type DeleteStorageSSLCrtListEntryNoContent struct {
}

// NewDeleteStorageSSLCrtListEntryNoContent creates DeleteStorageSSLCrtListEntryNoContent with default headers values
func NewDeleteStorageSSLCrtListEntryNoContent() *DeleteStorageSSLCrtListEntryNoContent {

	return &DeleteStorageSSLCrtListEntryNoContent{}
}

// WriteResponse to the client
func (o *DeleteStorageSSLCrtListEntryNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteStorageSSLCrtListEntryBadRequestCode is the HTTP code returned for type DeleteStorageSSLCrtListEntryBadRequest
const DeleteStorageSSLCrtListEntryBadRequestCode int = 400

/*
DeleteStorageSSLCrtListEntryBadRequest Bad request

swagger:response deleteStorageSSLCrtListEntryBadRequest
*/
type DeleteStorageSSLCrtListEntryBadRequest struct {
	/*Configuration file version

	 */
	ConfigurationVersion string `json:"Configuration-Version"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteStorageSSLCrtListEntryBadRequest creates DeleteStorageSSLCrtListEntryBadRequest with default headers values
func NewDeleteStorageSSLCrtListEntryBadRequest() *DeleteStorageSSLCrtListEntryBadRequest {

	return &DeleteStorageSSLCrtListEntryBadRequest{}
}

// WithConfigurationVersion adds the configurationVersion to the delete storage s s l crt list entry bad request response
func (o *DeleteStorageSSLCrtListEntryBadRequest) WithConfigurationVersion(configurationVersion string) *DeleteStorageSSLCrtListEntryBadRequest {
	o.ConfigurationVersion = configurationVersion
	return o
}

// SetConfigurationVersion sets the configurationVersion to the delete storage s s l crt list entry bad request response
func (o *DeleteStorageSSLCrtListEntryBadRequest) SetConfigurationVersion(configurationVersion string) {
	o.ConfigurationVersion = configurationVersion
}

// WithPayload adds the payload to the delete storage s s l crt list entry bad request response
func (o *DeleteStorageSSLCrtListEntryBadRequest) WithPayload(payload *models.Error) *DeleteStorageSSLCrtListEntryBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete storage s s l crt list entry bad request response
func (o *DeleteStorageSSLCrtListEntryBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteStorageSSLCrtListEntryBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Configuration-Version

	configurationVersion := o.ConfigurationVersion
	if configurationVersion != "" {
		rw.Header().Set("Configuration-Version", configurationVersion)
	}

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteStorageSSLCrtListEntryNotFoundCode is the HTTP code returned for type DeleteStorageSSLCrtListEntryNotFound
const DeleteStorageSSLCrtListEntryNotFoundCode int = 404

/*
DeleteStorageSSLCrtListEntryNotFound The specified resource was not found

swagger:response deleteStorageSSLCrtListEntryNotFound
*/
type DeleteStorageSSLCrtListEntryNotFound struct {
	/*Configuration file version

	 */
	ConfigurationVersion string `json:"Configuration-Version"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteStorageSSLCrtListEntryNotFound creates DeleteStorageSSLCrtListEntryNotFound with default headers values
func NewDeleteStorageSSLCrtListEntryNotFound() *DeleteStorageSSLCrtListEntryNotFound {

	return &DeleteStorageSSLCrtListEntryNotFound{}
}

// WithConfigurationVersion adds the configurationVersion to the delete storage s s l crt list entry not found response
func (o *DeleteStorageSSLCrtListEntryNotFound) WithConfigurationVersion(configurationVersion string) *DeleteStorageSSLCrtListEntryNotFound {
	o.ConfigurationVersion = configurationVersion
	return o
}

// SetConfigurationVersion sets the configurationVersion to the delete storage s s l crt list entry not found response
func (o *DeleteStorageSSLCrtListEntryNotFound) SetConfigurationVersion(configurationVersion string) {
	o.ConfigurationVersion = configurationVersion
}

// WithPayload adds the payload to the delete storage s s l crt list entry not found response
func (o *DeleteStorageSSLCrtListEntryNotFound) WithPayload(payload *models.Error) *DeleteStorageSSLCrtListEntryNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete storage s s l crt list entry not found response
func (o *DeleteStorageSSLCrtListEntryNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteStorageSSLCrtListEntryNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Configuration-Version

	configurationVersion := o.ConfigurationVersion
	if configurationVersion != "" {
		rw.Header().Set("Configuration-Version", configurationVersion)
	}

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
DeleteStorageSSLCrtListEntryDefault General Error

swagger:response deleteStorageSSLCrtListEntryDefault
*/
type DeleteStorageSSLCrtListEntryDefault struct {
	_statusCode int
	/*Configuration file version

	 */
	ConfigurationVersion string `json:"Configuration-Version"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteStorageSSLCrtListEntryDefault creates DeleteStorageSSLCrtListEntryDefault with default headers values
func NewDeleteStorageSSLCrtListEntryDefault(code int) *DeleteStorageSSLCrtListEntryDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteStorageSSLCrtListEntryDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete storage s s l crt list entry default response
func (o *DeleteStorageSSLCrtListEntryDefault) WithStatusCode(code int) *DeleteStorageSSLCrtListEntryDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete storage s s l crt list entry default response
func (o *DeleteStorageSSLCrtListEntryDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithConfigurationVersion adds the configurationVersion to the delete storage s s l crt list entry default response
func (o *DeleteStorageSSLCrtListEntryDefault) WithConfigurationVersion(configurationVersion string) *DeleteStorageSSLCrtListEntryDefault {
	o.ConfigurationVersion = configurationVersion
	return o
}

// SetConfigurationVersion sets the configurationVersion to the delete storage s s l crt list entry default response
func (o *DeleteStorageSSLCrtListEntryDefault) SetConfigurationVersion(configurationVersion string) {
	o.ConfigurationVersion = configurationVersion
}

// WithPayload adds the payload to the delete storage s s l crt list entry default response
func (o *DeleteStorageSSLCrtListEntryDefault) WithPayload(payload *models.Error) *DeleteStorageSSLCrtListEntryDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete storage s s l crt list entry default response
func (o *DeleteStorageSSLCrtListEntryDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteStorageSSLCrtListEntryDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Configuration-Version

	configurationVersion := o.ConfigurationVersion
	if configurationVersion != "" {
		rw.Header().Set("Configuration-Version", configurationVersion)
	}

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
