// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package storage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/haproxytech/client-native/v6/models"
)

// CreateStorageSSLCrtListEntryCreatedCode is the HTTP code returned for type CreateStorageSSLCrtListEntryCreated
const CreateStorageSSLCrtListEntryCreatedCode int = 201

/*
CreateStorageSSLCrtListEntryCreated New entry added

swagger:response createStorageSSLCrtListEntryCreated
*/
type CreateStorageSSLCrtListEntryCreated struct {

	/*
	  In: Body
	*/
	Payload *models.SslCrtListEntry `json:"body,omitempty"`
}

// NewCreateStorageSSLCrtListEntryCreated creates CreateStorageSSLCrtListEntryCreated with default headers values
func NewCreateStorageSSLCrtListEntryCreated() *CreateStorageSSLCrtListEntryCreated {

	return &CreateStorageSSLCrtListEntryCreated{}
}

// WithPayload adds the payload to the create storage s s l crt list entry created response
func (o *CreateStorageSSLCrtListEntryCreated) WithPayload(payload *models.SslCrtListEntry) *CreateStorageSSLCrtListEntryCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create storage s s l crt list entry created response
func (o *CreateStorageSSLCrtListEntryCreated) SetPayload(payload *models.SslCrtListEntry) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateStorageSSLCrtListEntryCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateStorageSSLCrtListEntryAcceptedCode is the HTTP code returned for type CreateStorageSSLCrtListEntryAccepted
const CreateStorageSSLCrtListEntryAcceptedCode int = 202

/*
CreateStorageSSLCrtListEntryAccepted Configuration change accepted and reload requested

swagger:response createStorageSSLCrtListEntryAccepted
*/
type CreateStorageSSLCrtListEntryAccepted struct {
	/*ID of the requested reload

	 */
	ReloadID string `json:"Reload-ID"`
}

// NewCreateStorageSSLCrtListEntryAccepted creates CreateStorageSSLCrtListEntryAccepted with default headers values
func NewCreateStorageSSLCrtListEntryAccepted() *CreateStorageSSLCrtListEntryAccepted {

	return &CreateStorageSSLCrtListEntryAccepted{}
}

// WithReloadID adds the reloadId to the create storage s s l crt list entry accepted response
func (o *CreateStorageSSLCrtListEntryAccepted) WithReloadID(reloadID string) *CreateStorageSSLCrtListEntryAccepted {
	o.ReloadID = reloadID
	return o
}

// SetReloadID sets the reloadId to the create storage s s l crt list entry accepted response
func (o *CreateStorageSSLCrtListEntryAccepted) SetReloadID(reloadID string) {
	o.ReloadID = reloadID
}

// WriteResponse to the client
func (o *CreateStorageSSLCrtListEntryAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Reload-ID

	reloadID := o.ReloadID
	if reloadID != "" {
		rw.Header().Set("Reload-ID", reloadID)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(202)
}

// CreateStorageSSLCrtListEntryBadRequestCode is the HTTP code returned for type CreateStorageSSLCrtListEntryBadRequest
const CreateStorageSSLCrtListEntryBadRequestCode int = 400

/*
CreateStorageSSLCrtListEntryBadRequest Bad request

swagger:response createStorageSSLCrtListEntryBadRequest
*/
type CreateStorageSSLCrtListEntryBadRequest struct {
	/*Configuration file version

	 */
	ConfigurationVersion string `json:"Configuration-Version"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateStorageSSLCrtListEntryBadRequest creates CreateStorageSSLCrtListEntryBadRequest with default headers values
func NewCreateStorageSSLCrtListEntryBadRequest() *CreateStorageSSLCrtListEntryBadRequest {

	return &CreateStorageSSLCrtListEntryBadRequest{}
}

// WithConfigurationVersion adds the configurationVersion to the create storage s s l crt list entry bad request response
func (o *CreateStorageSSLCrtListEntryBadRequest) WithConfigurationVersion(configurationVersion string) *CreateStorageSSLCrtListEntryBadRequest {
	o.ConfigurationVersion = configurationVersion
	return o
}

// SetConfigurationVersion sets the configurationVersion to the create storage s s l crt list entry bad request response
func (o *CreateStorageSSLCrtListEntryBadRequest) SetConfigurationVersion(configurationVersion string) {
	o.ConfigurationVersion = configurationVersion
}

// WithPayload adds the payload to the create storage s s l crt list entry bad request response
func (o *CreateStorageSSLCrtListEntryBadRequest) WithPayload(payload *models.Error) *CreateStorageSSLCrtListEntryBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create storage s s l crt list entry bad request response
func (o *CreateStorageSSLCrtListEntryBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateStorageSSLCrtListEntryBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Configuration-Version

	configurationVersion := o.ConfigurationVersion
	if configurationVersion != "" {
		rw.Header().Set("Configuration-Version", configurationVersion)
	}

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateStorageSSLCrtListEntryConflictCode is the HTTP code returned for type CreateStorageSSLCrtListEntryConflict
const CreateStorageSSLCrtListEntryConflictCode int = 409

/*
CreateStorageSSLCrtListEntryConflict The specified resource already exists

swagger:response createStorageSSLCrtListEntryConflict
*/
type CreateStorageSSLCrtListEntryConflict struct {
	/*Configuration file version

	 */
	ConfigurationVersion string `json:"Configuration-Version"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateStorageSSLCrtListEntryConflict creates CreateStorageSSLCrtListEntryConflict with default headers values
func NewCreateStorageSSLCrtListEntryConflict() *CreateStorageSSLCrtListEntryConflict {

	return &CreateStorageSSLCrtListEntryConflict{}
}

// WithConfigurationVersion adds the configurationVersion to the create storage s s l crt list entry conflict response
func (o *CreateStorageSSLCrtListEntryConflict) WithConfigurationVersion(configurationVersion string) *CreateStorageSSLCrtListEntryConflict {
	o.ConfigurationVersion = configurationVersion
	return o
}

// SetConfigurationVersion sets the configurationVersion to the create storage s s l crt list entry conflict response
func (o *CreateStorageSSLCrtListEntryConflict) SetConfigurationVersion(configurationVersion string) {
	o.ConfigurationVersion = configurationVersion
}

// WithPayload adds the payload to the create storage s s l crt list entry conflict response
func (o *CreateStorageSSLCrtListEntryConflict) WithPayload(payload *models.Error) *CreateStorageSSLCrtListEntryConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create storage s s l crt list entry conflict response
func (o *CreateStorageSSLCrtListEntryConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateStorageSSLCrtListEntryConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Configuration-Version

	configurationVersion := o.ConfigurationVersion
	if configurationVersion != "" {
		rw.Header().Set("Configuration-Version", configurationVersion)
	}

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
CreateStorageSSLCrtListEntryDefault General Error

swagger:response createStorageSSLCrtListEntryDefault
*/
type CreateStorageSSLCrtListEntryDefault struct {
	_statusCode int
	/*Configuration file version

	 */
	ConfigurationVersion string `json:"Configuration-Version"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateStorageSSLCrtListEntryDefault creates CreateStorageSSLCrtListEntryDefault with default headers values
func NewCreateStorageSSLCrtListEntryDefault(code int) *CreateStorageSSLCrtListEntryDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateStorageSSLCrtListEntryDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create storage s s l crt list entry default response
func (o *CreateStorageSSLCrtListEntryDefault) WithStatusCode(code int) *CreateStorageSSLCrtListEntryDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create storage s s l crt list entry default response
func (o *CreateStorageSSLCrtListEntryDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithConfigurationVersion adds the configurationVersion to the create storage s s l crt list entry default response
func (o *CreateStorageSSLCrtListEntryDefault) WithConfigurationVersion(configurationVersion string) *CreateStorageSSLCrtListEntryDefault {
	o.ConfigurationVersion = configurationVersion
	return o
}

// SetConfigurationVersion sets the configurationVersion to the create storage s s l crt list entry default response
func (o *CreateStorageSSLCrtListEntryDefault) SetConfigurationVersion(configurationVersion string) {
	o.ConfigurationVersion = configurationVersion
}

// WithPayload adds the payload to the create storage s s l crt list entry default response
func (o *CreateStorageSSLCrtListEntryDefault) WithPayload(payload *models.Error) *CreateStorageSSLCrtListEntryDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create storage s s l crt list entry default response
func (o *CreateStorageSSLCrtListEntryDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateStorageSSLCrtListEntryDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Configuration-Version

	configurationVersion := o.ConfigurationVersion
	if configurationVersion != "" {
		rw.Header().Set("Configuration-Version", configurationVersion)
	}

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
