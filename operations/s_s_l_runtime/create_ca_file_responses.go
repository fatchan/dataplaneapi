// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package s_s_l_runtime

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/haproxytech/client-native/v6/models"
)

// CreateCaFileCreatedCode is the HTTP code returned for type CreateCaFileCreated
const CreateCaFileCreatedCode int = 201

/*
CreateCaFileCreated SSL CA file created

swagger:response createCaFileCreated
*/
type CreateCaFileCreated struct {
}

// NewCreateCaFileCreated creates CreateCaFileCreated with default headers values
func NewCreateCaFileCreated() *CreateCaFileCreated {

	return &CreateCaFileCreated{}
}

// WriteResponse to the client
func (o *CreateCaFileCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(201)
}

// CreateCaFileBadRequestCode is the HTTP code returned for type CreateCaFileBadRequest
const CreateCaFileBadRequestCode int = 400

/*
CreateCaFileBadRequest Bad request

swagger:response createCaFileBadRequest
*/
type CreateCaFileBadRequest struct {
	/*Configuration file version

	 */
	ConfigurationVersion string `json:"Configuration-Version"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateCaFileBadRequest creates CreateCaFileBadRequest with default headers values
func NewCreateCaFileBadRequest() *CreateCaFileBadRequest {

	return &CreateCaFileBadRequest{}
}

// WithConfigurationVersion adds the configurationVersion to the create ca file bad request response
func (o *CreateCaFileBadRequest) WithConfigurationVersion(configurationVersion string) *CreateCaFileBadRequest {
	o.ConfigurationVersion = configurationVersion
	return o
}

// SetConfigurationVersion sets the configurationVersion to the create ca file bad request response
func (o *CreateCaFileBadRequest) SetConfigurationVersion(configurationVersion string) {
	o.ConfigurationVersion = configurationVersion
}

// WithPayload adds the payload to the create ca file bad request response
func (o *CreateCaFileBadRequest) WithPayload(payload *models.Error) *CreateCaFileBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create ca file bad request response
func (o *CreateCaFileBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCaFileBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Configuration-Version

	configurationVersion := o.ConfigurationVersion
	if configurationVersion != "" {
		rw.Header().Set("Configuration-Version", configurationVersion)
	}

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateCaFileConflictCode is the HTTP code returned for type CreateCaFileConflict
const CreateCaFileConflictCode int = 409

/*
CreateCaFileConflict The specified resource already exists

swagger:response createCaFileConflict
*/
type CreateCaFileConflict struct {
	/*Configuration file version

	 */
	ConfigurationVersion string `json:"Configuration-Version"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateCaFileConflict creates CreateCaFileConflict with default headers values
func NewCreateCaFileConflict() *CreateCaFileConflict {

	return &CreateCaFileConflict{}
}

// WithConfigurationVersion adds the configurationVersion to the create ca file conflict response
func (o *CreateCaFileConflict) WithConfigurationVersion(configurationVersion string) *CreateCaFileConflict {
	o.ConfigurationVersion = configurationVersion
	return o
}

// SetConfigurationVersion sets the configurationVersion to the create ca file conflict response
func (o *CreateCaFileConflict) SetConfigurationVersion(configurationVersion string) {
	o.ConfigurationVersion = configurationVersion
}

// WithPayload adds the payload to the create ca file conflict response
func (o *CreateCaFileConflict) WithPayload(payload *models.Error) *CreateCaFileConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create ca file conflict response
func (o *CreateCaFileConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCaFileConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Configuration-Version

	configurationVersion := o.ConfigurationVersion
	if configurationVersion != "" {
		rw.Header().Set("Configuration-Version", configurationVersion)
	}

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
CreateCaFileDefault General Error

swagger:response createCaFileDefault
*/
type CreateCaFileDefault struct {
	_statusCode int
	/*Configuration file version

	 */
	ConfigurationVersion string `json:"Configuration-Version"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateCaFileDefault creates CreateCaFileDefault with default headers values
func NewCreateCaFileDefault(code int) *CreateCaFileDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateCaFileDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create ca file default response
func (o *CreateCaFileDefault) WithStatusCode(code int) *CreateCaFileDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create ca file default response
func (o *CreateCaFileDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithConfigurationVersion adds the configurationVersion to the create ca file default response
func (o *CreateCaFileDefault) WithConfigurationVersion(configurationVersion string) *CreateCaFileDefault {
	o.ConfigurationVersion = configurationVersion
	return o
}

// SetConfigurationVersion sets the configurationVersion to the create ca file default response
func (o *CreateCaFileDefault) SetConfigurationVersion(configurationVersion string) {
	o.ConfigurationVersion = configurationVersion
}

// WithPayload adds the payload to the create ca file default response
func (o *CreateCaFileDefault) WithPayload(payload *models.Error) *CreateCaFileDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create ca file default response
func (o *CreateCaFileDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateCaFileDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Configuration-Version

	configurationVersion := o.ConfigurationVersion
	if configurationVersion != "" {
		rw.Header().Set("Configuration-Version", configurationVersion)
	}

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
