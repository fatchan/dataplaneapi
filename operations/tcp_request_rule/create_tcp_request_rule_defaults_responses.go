// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2019 HAProxy Technologies
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package tcp_request_rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/haproxytech/client-native/v6/models"
)

// CreateTCPRequestRuleDefaultsCreatedCode is the HTTP code returned for type CreateTCPRequestRuleDefaultsCreated
const CreateTCPRequestRuleDefaultsCreatedCode int = 201

/*
CreateTCPRequestRuleDefaultsCreated TCP Request Rule created

swagger:response createTcpRequestRuleDefaultsCreated
*/
type CreateTCPRequestRuleDefaultsCreated struct {

	/*
	  In: Body
	*/
	Payload *models.TCPRequestRule `json:"body,omitempty"`
}

// NewCreateTCPRequestRuleDefaultsCreated creates CreateTCPRequestRuleDefaultsCreated with default headers values
func NewCreateTCPRequestRuleDefaultsCreated() *CreateTCPRequestRuleDefaultsCreated {

	return &CreateTCPRequestRuleDefaultsCreated{}
}

// WithPayload adds the payload to the create Tcp request rule defaults created response
func (o *CreateTCPRequestRuleDefaultsCreated) WithPayload(payload *models.TCPRequestRule) *CreateTCPRequestRuleDefaultsCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create Tcp request rule defaults created response
func (o *CreateTCPRequestRuleDefaultsCreated) SetPayload(payload *models.TCPRequestRule) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTCPRequestRuleDefaultsCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateTCPRequestRuleDefaultsAcceptedCode is the HTTP code returned for type CreateTCPRequestRuleDefaultsAccepted
const CreateTCPRequestRuleDefaultsAcceptedCode int = 202

/*
CreateTCPRequestRuleDefaultsAccepted Configuration change accepted and reload requested

swagger:response createTcpRequestRuleDefaultsAccepted
*/
type CreateTCPRequestRuleDefaultsAccepted struct {
	/*ID of the requested reload

	 */
	ReloadID string `json:"Reload-ID"`

	/*
	  In: Body
	*/
	Payload *models.TCPRequestRule `json:"body,omitempty"`
}

// NewCreateTCPRequestRuleDefaultsAccepted creates CreateTCPRequestRuleDefaultsAccepted with default headers values
func NewCreateTCPRequestRuleDefaultsAccepted() *CreateTCPRequestRuleDefaultsAccepted {

	return &CreateTCPRequestRuleDefaultsAccepted{}
}

// WithReloadID adds the reloadId to the create Tcp request rule defaults accepted response
func (o *CreateTCPRequestRuleDefaultsAccepted) WithReloadID(reloadID string) *CreateTCPRequestRuleDefaultsAccepted {
	o.ReloadID = reloadID
	return o
}

// SetReloadID sets the reloadId to the create Tcp request rule defaults accepted response
func (o *CreateTCPRequestRuleDefaultsAccepted) SetReloadID(reloadID string) {
	o.ReloadID = reloadID
}

// WithPayload adds the payload to the create Tcp request rule defaults accepted response
func (o *CreateTCPRequestRuleDefaultsAccepted) WithPayload(payload *models.TCPRequestRule) *CreateTCPRequestRuleDefaultsAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create Tcp request rule defaults accepted response
func (o *CreateTCPRequestRuleDefaultsAccepted) SetPayload(payload *models.TCPRequestRule) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTCPRequestRuleDefaultsAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Reload-ID

	reloadID := o.ReloadID
	if reloadID != "" {
		rw.Header().Set("Reload-ID", reloadID)
	}

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateTCPRequestRuleDefaultsBadRequestCode is the HTTP code returned for type CreateTCPRequestRuleDefaultsBadRequest
const CreateTCPRequestRuleDefaultsBadRequestCode int = 400

/*
CreateTCPRequestRuleDefaultsBadRequest Bad request

swagger:response createTcpRequestRuleDefaultsBadRequest
*/
type CreateTCPRequestRuleDefaultsBadRequest struct {
	/*Configuration file version

	 */
	ConfigurationVersion string `json:"Configuration-Version"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateTCPRequestRuleDefaultsBadRequest creates CreateTCPRequestRuleDefaultsBadRequest with default headers values
func NewCreateTCPRequestRuleDefaultsBadRequest() *CreateTCPRequestRuleDefaultsBadRequest {

	return &CreateTCPRequestRuleDefaultsBadRequest{}
}

// WithConfigurationVersion adds the configurationVersion to the create Tcp request rule defaults bad request response
func (o *CreateTCPRequestRuleDefaultsBadRequest) WithConfigurationVersion(configurationVersion string) *CreateTCPRequestRuleDefaultsBadRequest {
	o.ConfigurationVersion = configurationVersion
	return o
}

// SetConfigurationVersion sets the configurationVersion to the create Tcp request rule defaults bad request response
func (o *CreateTCPRequestRuleDefaultsBadRequest) SetConfigurationVersion(configurationVersion string) {
	o.ConfigurationVersion = configurationVersion
}

// WithPayload adds the payload to the create Tcp request rule defaults bad request response
func (o *CreateTCPRequestRuleDefaultsBadRequest) WithPayload(payload *models.Error) *CreateTCPRequestRuleDefaultsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create Tcp request rule defaults bad request response
func (o *CreateTCPRequestRuleDefaultsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTCPRequestRuleDefaultsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Configuration-Version

	configurationVersion := o.ConfigurationVersion
	if configurationVersion != "" {
		rw.Header().Set("Configuration-Version", configurationVersion)
	}

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateTCPRequestRuleDefaultsConflictCode is the HTTP code returned for type CreateTCPRequestRuleDefaultsConflict
const CreateTCPRequestRuleDefaultsConflictCode int = 409

/*
CreateTCPRequestRuleDefaultsConflict The specified resource already exists

swagger:response createTcpRequestRuleDefaultsConflict
*/
type CreateTCPRequestRuleDefaultsConflict struct {
	/*Configuration file version

	 */
	ConfigurationVersion string `json:"Configuration-Version"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateTCPRequestRuleDefaultsConflict creates CreateTCPRequestRuleDefaultsConflict with default headers values
func NewCreateTCPRequestRuleDefaultsConflict() *CreateTCPRequestRuleDefaultsConflict {

	return &CreateTCPRequestRuleDefaultsConflict{}
}

// WithConfigurationVersion adds the configurationVersion to the create Tcp request rule defaults conflict response
func (o *CreateTCPRequestRuleDefaultsConflict) WithConfigurationVersion(configurationVersion string) *CreateTCPRequestRuleDefaultsConflict {
	o.ConfigurationVersion = configurationVersion
	return o
}

// SetConfigurationVersion sets the configurationVersion to the create Tcp request rule defaults conflict response
func (o *CreateTCPRequestRuleDefaultsConflict) SetConfigurationVersion(configurationVersion string) {
	o.ConfigurationVersion = configurationVersion
}

// WithPayload adds the payload to the create Tcp request rule defaults conflict response
func (o *CreateTCPRequestRuleDefaultsConflict) WithPayload(payload *models.Error) *CreateTCPRequestRuleDefaultsConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create Tcp request rule defaults conflict response
func (o *CreateTCPRequestRuleDefaultsConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTCPRequestRuleDefaultsConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Configuration-Version

	configurationVersion := o.ConfigurationVersion
	if configurationVersion != "" {
		rw.Header().Set("Configuration-Version", configurationVersion)
	}

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
CreateTCPRequestRuleDefaultsDefault General Error

swagger:response createTcpRequestRuleDefaultsDefault
*/
type CreateTCPRequestRuleDefaultsDefault struct {
	_statusCode int
	/*Configuration file version

	 */
	ConfigurationVersion string `json:"Configuration-Version"`

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateTCPRequestRuleDefaultsDefault creates CreateTCPRequestRuleDefaultsDefault with default headers values
func NewCreateTCPRequestRuleDefaultsDefault(code int) *CreateTCPRequestRuleDefaultsDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateTCPRequestRuleDefaultsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create TCP request rule defaults default response
func (o *CreateTCPRequestRuleDefaultsDefault) WithStatusCode(code int) *CreateTCPRequestRuleDefaultsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create TCP request rule defaults default response
func (o *CreateTCPRequestRuleDefaultsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithConfigurationVersion adds the configurationVersion to the create TCP request rule defaults default response
func (o *CreateTCPRequestRuleDefaultsDefault) WithConfigurationVersion(configurationVersion string) *CreateTCPRequestRuleDefaultsDefault {
	o.ConfigurationVersion = configurationVersion
	return o
}

// SetConfigurationVersion sets the configurationVersion to the create TCP request rule defaults default response
func (o *CreateTCPRequestRuleDefaultsDefault) SetConfigurationVersion(configurationVersion string) {
	o.ConfigurationVersion = configurationVersion
}

// WithPayload adds the payload to the create TCP request rule defaults default response
func (o *CreateTCPRequestRuleDefaultsDefault) WithPayload(payload *models.Error) *CreateTCPRequestRuleDefaultsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create TCP request rule defaults default response
func (o *CreateTCPRequestRuleDefaultsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateTCPRequestRuleDefaultsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Configuration-Version

	configurationVersion := o.ConfigurationVersion
	if configurationVersion != "" {
		rw.Header().Set("Configuration-Version", configurationVersion)
	}

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
